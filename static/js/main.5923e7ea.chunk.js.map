{"version":3,"sources":["components/Header.js","components/Todo.js","components/Todos.js","components/AddForm.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","Todo","id","text","done","deleteTodo","toggleDone","index","draggableId","provided","draggableProps","dragHandleProps","ref","innerRef","type","onChange","checked","onClick","Todos","todos","droppableId","droppableProps","map","todo","placeholder","AddForm","addTodo","useState","todoText","setTodoText","value","e","target","App","setTodo","useEffect","storedTodos","localStorage","getItem","JSON","parse","setItem","stringify","onDragEnd","result","destination","source","tempArray","Array","from","splice","dragged","Date","now","toString","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5923e7ea.chunk.js","sourcesContent":["const Header = () => {\r\n  return (\r\n    <div className=\"Header\">\r\n      <h1 className=\"headerText\">TO DO LIST</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { BiTrash } from \"react-icons/bi\";\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\n\r\nconst Todo = ({ id, text, done, deleteTodo, toggleDone, index }) => {\r\n  return (\r\n    <Draggable draggableId={id} index={index} key={id}>\r\n      {(provided) => (\r\n        <div\r\n          className={`Todo ${done ? \"grayedOut\" : \"\"}`}\r\n          {...provided.draggableProps}\r\n          {...provided.dragHandleProps}\r\n          ref={provided.innerRef}\r\n        >\r\n          <input\r\n            type=\"checkbox\"\r\n            onChange={() => toggleDone(id)}\r\n            checked={done}\r\n          />\r\n          <p className=\"todoText\">{text}</p>\r\n          <div>\r\n            <BiTrash\r\n              className=\"deleteTodoButton\"\r\n              onClick={() => deleteTodo(id)}\r\n            />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Draggable>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n","import Todo from \"./Todo\";\r\nimport { Droppable } from \"react-beautiful-dnd\";\r\n\r\nconst Todos = ({ todos, deleteTodo, toggleDone }) => {\r\n  return (\r\n    <Droppable droppableId=\"todos\" key=\"todos\">\r\n      {(provided) => (\r\n        <div\r\n          className=\"Todos\"\r\n          ref={provided.innerRef}\r\n          {...provided.droppableProps}\r\n        >\r\n          {todos.map((todo, index) => (\r\n            <Todo\r\n              id={todo.id}\r\n              text={todo.text}\r\n              done={todo.done}\r\n              deleteTodo={deleteTodo}\r\n              toggleDone={toggleDone}\r\n              index={index}\r\n            />\r\n          ))}\r\n          {provided.placeholder}\r\n        </div>\r\n      )}\r\n    </Droppable>\r\n  );\r\n};\r\n\r\nexport default Todos;\r\n","import { useState } from \"react\";\r\nimport { CgAdd } from \"react-icons/cg\";\r\n\r\nconst AddForm = ({ addTodo }) => {\r\n  const [todoText, setTodoText] = useState(\"\");\r\n  return (\r\n    <form className=\"AddForm\">\r\n      <input\r\n        className=\"addFormInput\"\r\n        type=\"text\"\r\n        placeholder=\"New todo...\"\r\n        value={todoText}\r\n        onChange={(e) => setTodoText(e.target.value)}\r\n      />\r\n      <CgAdd\r\n        className=\"addTodoButton\"\r\n        onClick={() => {\r\n          if (todoText) {\r\n            addTodo(todoText);\r\n            setTodoText(\"\");\r\n          }\r\n        }}\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddForm;\r\n","import Header from \"./components/Header\";\nimport Todos from \"./components/Todos\";\nimport AddForm from \"./components/AddForm\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\n\nfunction App() {\n  const [todos, setTodo] = useState([]);\n\n  useEffect(() => {\n    const storedTodos = localStorage.getItem(\"todos\");\n    if (storedTodos) setTodo(JSON.parse(storedTodos));\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  });\n\n  const deleteTodo = (id) => {\n    setTodo(todos.filter((todo) => id !== todo.id));\n  };\n\n  const addTodo = (text) => {\n    setTodo([...todos, { id: Date.now().toString(), text: text, done: false }]);\n  };\n\n  const toggleDone = (id) => {\n    setTodo(\n      todos.map((todo) =>\n        id === todo.id ? { ...todo, done: !todo.done } : todo\n      )\n    );\n  };\n\n  const onDragEnd = (result) => {\n    if (!result.destination || result.destination.index === result.source.index)\n      return;\n    let tempArray = Array.from(todos);\n    let [dragged] = tempArray.splice(result.source.index, 1);\n    tempArray.splice(result.destination.index, 0, dragged);\n    setTodo(tempArray);\n  };\n\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <div className=\"App\">\n        <Header />\n        <AddForm addTodo={addTodo} />\n\n        <Todos\n          todos={todos}\n          deleteTodo={deleteTodo}\n          toggleDone={toggleDone}\n        ></Todos>\n      </div>\n    </DragDropContext>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}